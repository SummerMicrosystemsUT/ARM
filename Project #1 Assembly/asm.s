#include <ST/iostm32f207zx.h>
	
	NAME    main
        
        PUBLIC  __iar_program_start		;DECLARES START OF PROG
        PUBLIC  __vector_table			;DECLARES PUBLIC VECTOR TABLE
	
	SECTION CSTACK : DATA : NOROOT(3)

        SECTION .intvec : CODE : NOROOT(2)		
        DATA
	
__vector_table
        DCD     sfe(CSTACK)			;STACK POINTER INITIALIZER
        DCD     __iar_program_start		;RESET HANDLER
        
__iar_program_start
        B       main

        SECTION .text : CODE (2)
        THUMB

main  
	;ENABLE PERIPHERAL CLOCK THAT HANDLES GPIOG PORT
	LDR	R0, =RCC_AHB1ENR
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<6)
	STR	R1, [R0]
	
	;TURN ON USER BUTTON
	LDR	R0, =GPIOG_MODER
	LDR	R1, [R0]
	BIC	R1, R1, #(3<<12)
	STR	R1, [R0]
	
	;ENABLE TIMER 2
	LDR	R0, =RCC_APB1ENR
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<0)
	STR	R1, [R0]
	
	;TURN ON TIMER 2 COUNTER
	LDR	R0, =TIM2_CR1
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<0)
	STR	R1, [R0]
	
	;TURN ON ARR
	LDR	R0, =TIM2_CR1
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<7)
	STR	R1, [R0]
	
	;SET AUTO RELOAD REGISTER
	LDR	R0, =TIM2_ARR
	LDR	R1, [R0]
	MOV	R1, #0x000009C4
	STR	R1, [R0]
	
	;SET TIMER 2 COUNTS 1000 TIMES PER SECOND
	LDR	R0, =TIM2_PSC
	LDR	R1, [R0]
	ORR	R1, R1, #0x3E80
	STR	R1, [R0]
	
	;GENERATE UPDATE EVENT
	LDR	R0, =TIM2_EGR
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<0)
	STR	R1, [R0]
	
	;ENABLE GPIOF
	LDR	R0, =RCC_AHB1ENR
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<5)
	STR	R1, [R0]
	
	;ENABLE STAT LED 1
	LDR	R0, =GPIOF_MODER
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<12)
	STR	R1, [R0]
	
	;ENABLE LED1 OUTPUT
	LDR	R2, =GPIOF_ODR
	LDR	R3, [R2]
	ORR	R3, R3, #(1<<6)
	
	
	;ENABLE STAT LED 2
	LDR	R0, =GPIOF_MODER
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<14)
	STR	R1, [R0]
	
	;ENABLE LED2 OUTPUT
	LDR	R4, =GPIOF_ODR
	LDR	R5, [R4]
	ORR	R5, R5, #(1<<7)
	ORR	R5, R5, #(1<<6)

	;ENABLE STAT LED 3
	LDR	R0, =GPIOF_MODER
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<16)
	STR	R1, [R0]
	
	;ENABLE LED3 OUTPUT
	LDR	R6, =GPIOF_ODR
	LDR	R7, [R6]
	ORR	R7, R7, #(1<<8)
	ORR	R7, R7, #(1<<7)
	ORR	R7, R7, #(1<<6)	
	;ENABLE STAT LED 4
	LDR	R0, =GPIOF_MODER
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<18)
	STR	R1, [R0]
	
	;ENABLE LED4 OUTPUT
	LDR	R8, =GPIOF_ODR
	LDR	R9, [R8]
	ORR	R9, R9, #(1<<9)
	ORR	R9, R9, #(1<<8)
	ORR	R9, R9, #(1<<7)
	ORR	R9, R9, #(1<<6)	
	;ENABLE CCR 1
	LDR	R0, =TIM2_CCER
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<0)
	STR	R1, [R0]
	
	;SET CAPTURE/COMPARE REGISTER
	LDR	R0, =TIM2_CCR1
	LDR	R1, [R0]
	MOV	R1, #0x00004000
	STR	R1, [R0]
	
	
	
TheLoop
	LDR	R1, [R8]
	EOR	R1, R1,R1
	STR	R1, [R8]
	
	LDR	R1, [R6]
	EOR	R1, R1,R1
	STR	R1, [R6]
	
	LDR	R1, [R4]
	EOR	R1, R1,R1
	STR	R1, [R4]
	
	LDR	R1, [R2]
	EOR	R1, R1,R1
	STR	R1, [R2]
	
	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	
	CMP	R12, #0x7600
	BNE	TheLoop
	
	;GENERATE UPDATE EVENT
	LDR	R0, =TIM2_EGR
	LDR	R1, [R0]
	ORR	R1, R1, #(1<<0)
	STR	R1, [R0]
	
	B	START
START
	LDR	R0, =TIM2_CNT
	LDR	R1, [R0]
	
	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	CMP	R12, #0x7600
	BNE	TheLoop
	
	CMP	R1, #0x1F4
	BNE	START
	STR	R3, [R2]
LED2
	LDR	R0, =TIM2_CNT
	LDR	R1, [R0]
	
	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	CMP	R12, #0x7600
	BNE	TheLoop

	CMP	R1, #0x3E8
	BNE	LED2
	STR	R5, [R4]
LED3
	LDR	R0, =TIM2_CNT
	LDR	R1, [R0]
	
	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	CMP	R12, #0x7600
	BNE	TheLoop
	MOV	R0, #0x5DC
	CMP	R1, R0
	BNE	LED3
	STR	R7, [R6]
LED4
	LDR	R0, =TIM2_CNT
	LDR	R1, [R0]
	CMP	R12, #0x7600
	BNE	TheLoop

	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	CMP	R1, #0x7D0
	BNE	LED4
	STR	R9, [R8]		
wait	

	LDR	R11, =GPIOG_IDR
	LDR	R12, [R11]
	CMP	R12, #0x7600
	BNE	TheLoop
	
	B	wait
	
	
	
        END
